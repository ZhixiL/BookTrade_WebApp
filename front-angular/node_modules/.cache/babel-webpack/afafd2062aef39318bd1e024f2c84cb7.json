{"ast":null,"code":"import _createClass from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nexport var SubjectSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SubjectSubscriber, _Subscriber);\n\n  var _super = _createSuper(SubjectSubscriber);\n\n  function SubjectSubscriber(destination) {\n    var _this;\n\n    _classCallCheck(this, SubjectSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.destination = destination;\n    return _this;\n  }\n\n  return SubjectSubscriber;\n}(Subscriber);\nexport var Subject = /*#__PURE__*/function (_Observable) {\n  _inherits(Subject, _Observable);\n\n  var _super2 = _createSuper(Subject);\n\n  function Subject() {\n    var _this2;\n\n    _classCallCheck(this, Subject);\n\n    _this2 = _super2.call(this);\n    _this2.observers = [];\n    _this2.closed = false;\n    _this2.isStopped = false;\n    _this2.hasError = false;\n    _this2.thrownError = null;\n    return _this2;\n  }\n\n  _createClass(Subject, [{\n    key: rxSubscriberSymbol,\n    value: function value() {\n      return new SubjectSubscriber(this);\n    }\n  }, {\n    key: \"lift\",\n    value: function lift(operator) {\n      var subject = new AnonymousSubject(this, this);\n      subject.operator = operator;\n      return subject;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n\n      if (!this.isStopped) {\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n\n        for (var i = 0; i < len; i++) {\n          copy[i].next(value);\n        }\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n\n      this.hasError = true;\n      this.thrownError = err;\n      this.isStopped = true;\n      var observers = this.observers;\n      var len = observers.length;\n      var copy = observers.slice();\n\n      for (var i = 0; i < len; i++) {\n        copy[i].error(err);\n      }\n\n      this.observers.length = 0;\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n\n      this.isStopped = true;\n      var observers = this.observers;\n      var len = observers.length;\n      var copy = observers.slice();\n\n      for (var i = 0; i < len; i++) {\n        copy[i].complete();\n      }\n\n      this.observers.length = 0;\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.isStopped = true;\n      this.closed = true;\n      this.observers = null;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(subscriber) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      } else {\n        return _get(_getPrototypeOf(Subject.prototype), \"_trySubscribe\", this).call(this, subscriber);\n      }\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      } else if (this.hasError) {\n        subscriber.error(this.thrownError);\n        return Subscription.EMPTY;\n      } else if (this.isStopped) {\n        subscriber.complete();\n        return Subscription.EMPTY;\n      } else {\n        this.observers.push(subscriber);\n        return new SubjectSubscription(this, subscriber);\n      }\n    }\n  }, {\n    key: \"asObservable\",\n    value: function asObservable() {\n      var observable = new Observable();\n      observable.source = this;\n      return observable;\n    }\n  }]);\n\n  return Subject;\n}(Observable);\n\nSubject.create = function (destination, source) {\n  return new AnonymousSubject(destination, source);\n};\n\nexport var AnonymousSubject = /*#__PURE__*/function (_Subject) {\n  _inherits(AnonymousSubject, _Subject);\n\n  var _super3 = _createSuper(AnonymousSubject);\n\n  function AnonymousSubject(destination, source) {\n    var _this3;\n\n    _classCallCheck(this, AnonymousSubject);\n\n    _this3 = _super3.call(this);\n    _this3.destination = destination;\n    _this3.source = source;\n    return _this3;\n  }\n\n  _createClass(AnonymousSubject, [{\n    key: \"next\",\n    value: function next(value) {\n      var destination = this.destination;\n\n      if (destination && destination.next) {\n        destination.next(value);\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var destination = this.destination;\n\n      if (destination && destination.error) {\n        this.destination.error(err);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var destination = this.destination;\n\n      if (destination && destination.complete) {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var source = this.source;\n\n      if (source) {\n        return this.source.subscribe(subscriber);\n      } else {\n        return Subscription.EMPTY;\n      }\n    }\n  }]);\n\n  return AnonymousSubject;\n}(Subject); //# sourceMappingURL=Subject.js.map","map":{"version":3,"sources":["/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/Subject.js"],"names":["Observable","Subscriber","Subscription","ObjectUnsubscribedError","SubjectSubscription","rxSubscriber","rxSubscriberSymbol","SubjectSubscriber","destination","Subject","observers","closed","isStopped","hasError","thrownError","operator","subject","AnonymousSubject","value","len","length","copy","slice","i","next","err","error","complete","subscriber","EMPTY","push","observable","source","create","subscribe"],"mappings":"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","sourcesContent":["import { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nexport class SubjectSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.destination = destination;\n    }\n}\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    [rxSubscriberSymbol]() {\n        return new SubjectSubscriber(this);\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    next(value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            const { observers } = this;\n            const len = observers.length;\n            const copy = observers.slice();\n            for (let i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    }\n    error(err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    }\n    complete() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    }\n    unsubscribe() {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    }\n    _trySubscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return super._trySubscribe(subscriber);\n        }\n    }\n    _subscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        const { destination } = this;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    }\n    error(err) {\n        const { destination } = this;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    }\n    complete() {\n        const { destination } = this;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    }\n}\n//# sourceMappingURL=Subject.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _inherits from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n  return function (source) {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nvar TakeOperator = /*#__PURE__*/function () {\n  function TakeOperator(total) {\n    _classCallCheck(this, TakeOperator);\n\n    this.total = total;\n\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError();\n    }\n  }\n\n  _createClass(TakeOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    }\n  }]);\n\n  return TakeOperator;\n}();\n\nvar TakeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(TakeSubscriber, _Subscriber);\n\n  var _super = _createSuper(TakeSubscriber);\n\n  function TakeSubscriber(destination, total) {\n    var _this;\n\n    _classCallCheck(this, TakeSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.total = total;\n    _this.count = 0;\n    return _this;\n  }\n\n  _createClass(TakeSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var total = this.total;\n      var count = ++this.count;\n\n      if (count <= total) {\n        this.destination.next(value);\n\n        if (count === total) {\n          this.destination.complete();\n          this.unsubscribe();\n        }\n      }\n    }\n  }]);\n\n  return TakeSubscriber;\n}(Subscriber); //# sourceMappingURL=take.js.map","map":{"version":3,"sources":["/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/operators/take.js"],"names":["Subscriber","ArgumentOutOfRangeError","empty","take","count","source","lift","TakeOperator","total","subscriber","subscribe","TakeSubscriber","destination","value","next","complete","unsubscribe"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,uBAAT,QAAwC,iCAAxC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACxB,SAAO,UAACC,MAAD,EAAY;AACf,QAAID,KAAK,KAAK,CAAd,EAAiB;AACb,aAAOF,KAAK,EAAZ;AACH,KAFD,MAGK;AACD,aAAOG,MAAM,CAACC,IAAP,CAAY,IAAIC,YAAJ,CAAiBH,KAAjB,CAAZ,CAAP;AACH;AACJ,GAPD;AAQH;;IACKG,Y;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;;AACA,QAAI,KAAKA,KAAL,GAAa,CAAjB,EAAoB;AAChB,YAAM,IAAIP,uBAAJ,EAAN;AACH;AACJ;;;;WACD,cAAKQ,UAAL,EAAiBJ,MAAjB,EAAyB;AACrB,aAAOA,MAAM,CAACK,SAAP,CAAiB,IAAIC,cAAJ,CAAmBF,UAAnB,EAA+B,KAAKD,KAApC,CAAjB,CAAP;AACH;;;;;;IAECG,c;;;;;AACF,0BAAYC,WAAZ,EAAyBJ,KAAzB,EAAgC;AAAA;;AAAA;;AAC5B,8BAAMI,WAAN;AACA,UAAKJ,KAAL,GAAaA,KAAb;AACA,UAAKJ,KAAL,GAAa,CAAb;AAH4B;AAI/B;;;;WACD,eAAMS,KAAN,EAAa;AACT,UAAML,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMJ,KAAK,GAAG,EAAE,KAAKA,KAArB;;AACA,UAAIA,KAAK,IAAII,KAAb,EAAoB;AAChB,aAAKI,WAAL,CAAiBE,IAAjB,CAAsBD,KAAtB;;AACA,YAAIT,KAAK,KAAKI,KAAd,EAAqB;AACjB,eAAKI,WAAL,CAAiBG,QAAjB;AACA,eAAKC,WAAL;AACH;AACJ;AACJ;;;;EAhBwBhB,U,GAkB7B","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n    return (source) => {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nclass TakeOperator {\n    constructor(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    }\n}\nclass TakeSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(value) {\n        const total = this.total;\n        const count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=take.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _inherits from \"/Users/chunli/Desktop/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/chunli/Desktop/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/chunli/Desktop/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chunli/Desktop/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function sample(notifier) {\n  return function (source) {\n    return source.lift(new SampleOperator(notifier));\n  };\n}\n\nvar SampleOperator = /*#__PURE__*/function () {\n  function SampleOperator(notifier) {\n    _classCallCheck(this, SampleOperator);\n\n    this.notifier = notifier;\n  }\n\n  _createClass(SampleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var sampleSubscriber = new SampleSubscriber(subscriber);\n      var subscription = source.subscribe(sampleSubscriber);\n      subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n      return subscription;\n    }\n  }]);\n\n  return SampleOperator;\n}();\n\nvar SampleSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(SampleSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(SampleSubscriber);\n\n  function SampleSubscriber() {\n    var _this;\n\n    _classCallCheck(this, SampleSubscriber);\n\n    _this = _super.apply(this, arguments);\n    _this.hasValue = false;\n    return _this;\n  }\n\n  _createClass(SampleSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.value = value;\n      this.hasValue = true;\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.emitValue();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.emitValue();\n    }\n  }, {\n    key: \"emitValue\",\n    value: function emitValue() {\n      if (this.hasValue) {\n        this.hasValue = false;\n        this.destination.next(this.value);\n      }\n    }\n  }]);\n\n  return SampleSubscriber;\n}(SimpleOuterSubscriber); //# sourceMappingURL=sample.js.map","map":{"version":3,"sources":["/Users/chunli/Desktop/CEN4090L-Team5/front-angular/node_modules/rxjs/_esm2015/internal/operators/sample.js"],"names":["SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","sample","notifier","source","lift","SampleOperator","subscriber","sampleSubscriber","SampleSubscriber","subscription","subscribe","add","arguments","hasValue","value","emitValue","destination","next"],"mappings":";;;;AAAA,SAASA,qBAAT,EAAgCC,cAAhC,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AAC7B,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,cAAJ,CAAmBH,QAAnB,CAAZ,CAAZ;AAAA,GAAP;AACH;;IACKG,c;AACF,0BAAYH,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;;;WACD,cAAKI,UAAL,EAAiBH,MAAjB,EAAyB;AACrB,UAAMI,gBAAgB,GAAG,IAAIC,gBAAJ,CAAqBF,UAArB,CAAzB;AACA,UAAMG,YAAY,GAAGN,MAAM,CAACO,SAAP,CAAiBH,gBAAjB,CAArB;AACAE,MAAAA,YAAY,CAACE,GAAb,CAAiBZ,cAAc,CAAC,KAAKG,QAAN,EAAgB,IAAIF,qBAAJ,CAA0BO,gBAA1B,CAAhB,CAA/B;AACA,aAAOE,YAAP;AACH;;;;;;IAECD,gB;;;;;AACF,8BAAc;AAAA;;AAAA;;AACV,+BAASI,SAAT;AACA,UAAKC,QAAL,GAAgB,KAAhB;AAFU;AAGb;;;;WACD,eAAMC,KAAN,EAAa;AACT,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKD,QAAL,GAAgB,IAAhB;AACH;;;WACD,sBAAa;AACT,WAAKE,SAAL;AACH;;;WACD,0BAAiB;AACb,WAAKA,SAAL;AACH;;;WACD,qBAAY;AACR,UAAI,KAAKF,QAAT,EAAmB;AACf,aAAKA,QAAL,GAAgB,KAAhB;AACA,aAAKG,WAAL,CAAiBC,IAAjB,CAAsB,KAAKH,KAA3B;AACH;AACJ;;;;EApB0BhB,qB,GAsB/B","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function sample(notifier) {\n    return (source) => source.lift(new SampleOperator(notifier));\n}\nclass SampleOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const sampleSubscriber = new SampleSubscriber(subscriber);\n        const subscription = source.subscribe(sampleSubscriber);\n        subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n        return subscription;\n    }\n}\nclass SampleSubscriber extends SimpleOuterSubscriber {\n    constructor() {\n        super(...arguments);\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    }\n}\n//# sourceMappingURL=sample.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport var Subscription = /*#__PURE__*/function () {\n  function Subscription(unsubscribe) {\n    _classCallCheck(this, Subscription);\n\n    this.closed = false;\n    this._parentOrParents = null;\n    this._subscriptions = null;\n\n    if (unsubscribe) {\n      this._ctorUnsubscribe = true;\n      this._unsubscribe = unsubscribe;\n    }\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var errors;\n\n      if (this.closed) {\n        return;\n      }\n\n      var _parentOrParents = this._parentOrParents,\n          _ctorUnsubscribe = this._ctorUnsubscribe,\n          _unsubscribe = this._unsubscribe,\n          _subscriptions = this._subscriptions;\n      this.closed = true;\n      this._parentOrParents = null;\n      this._subscriptions = null;\n\n      if (_parentOrParents instanceof Subscription) {\n        _parentOrParents.remove(this);\n      } else if (_parentOrParents !== null) {\n        for (var index = 0; index < _parentOrParents.length; ++index) {\n          var parent = _parentOrParents[index];\n          parent.remove(this);\n        }\n      }\n\n      if (isFunction(_unsubscribe)) {\n        if (_ctorUnsubscribe) {\n          this._unsubscribe = undefined;\n        }\n\n        try {\n          _unsubscribe.call(this);\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n        }\n      }\n\n      if (isArray(_subscriptions)) {\n        var _index = -1;\n\n        var len = _subscriptions.length;\n\n        while (++_index < len) {\n          var sub = _subscriptions[_index];\n\n          if (isObject(sub)) {\n            try {\n              sub.unsubscribe();\n            } catch (e) {\n              errors = errors || [];\n\n              if (e instanceof UnsubscriptionError) {\n                errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n              } else {\n                errors.push(e);\n              }\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(teardown) {\n      var subscription = teardown;\n\n      if (!teardown) {\n        return Subscription.EMPTY;\n      }\n\n      switch (typeof teardown) {\n        case 'function':\n          subscription = new Subscription(teardown);\n\n        case 'object':\n          if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n            return subscription;\n          } else if (this.closed) {\n            subscription.unsubscribe();\n            return subscription;\n          } else if (!(subscription instanceof Subscription)) {\n            var tmp = subscription;\n            subscription = new Subscription();\n            subscription._subscriptions = [tmp];\n          }\n\n          break;\n\n        default:\n          {\n            throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n          }\n      }\n\n      var _subscription = subscription,\n          _parentOrParents = _subscription._parentOrParents;\n\n      if (_parentOrParents === null) {\n        subscription._parentOrParents = this;\n      } else if (_parentOrParents instanceof Subscription) {\n        if (_parentOrParents === this) {\n          return subscription;\n        }\n\n        subscription._parentOrParents = [_parentOrParents, this];\n      } else if (_parentOrParents.indexOf(this) === -1) {\n        _parentOrParents.push(this);\n      } else {\n        return subscription;\n      }\n\n      var subscriptions = this._subscriptions;\n\n      if (subscriptions === null) {\n        this._subscriptions = [subscription];\n      } else {\n        subscriptions.push(subscription);\n      }\n\n      return subscription;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(subscription) {\n      var subscriptions = this._subscriptions;\n\n      if (subscriptions) {\n        var subscriptionIndex = subscriptions.indexOf(subscription);\n\n        if (subscriptionIndex !== -1) {\n          subscriptions.splice(subscriptionIndex, 1);\n        }\n      }\n    }\n  }]);\n\n  return Subscription;\n}();\n\nSubscription.EMPTY = function (empty) {\n  empty.closed = true;\n  return empty;\n}(new Subscription());\n\nfunction flattenUnsubscriptionErrors(errors) {\n  return errors.reduce(function (errs, err) {\n    return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);\n  }, []);\n} //# sourceMappingURL=Subscription.js.map","map":{"version":3,"sources":["/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/Subscription.js"],"names":["isArray","isObject","isFunction","UnsubscriptionError","Subscription","unsubscribe","closed","_parentOrParents","_subscriptions","_ctorUnsubscribe","_unsubscribe","errors","remove","index","length","parent","undefined","call","e","flattenUnsubscriptionErrors","len","sub","concat","push","teardown","subscription","EMPTY","tmp","Error","indexOf","subscriptions","subscriptionIndex","splice","empty","reduce","errs","err"],"mappings":"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","sourcesContent":["import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport class Subscription {\n    constructor(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    unsubscribe() {\n        let errors;\n        if (this.closed) {\n            return;\n        }\n        let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = this;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (let index = 0; index < _parentOrParents.length; ++index) {\n                const parent = _parentOrParents[index];\n                parent.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            let index = -1;\n            let len = _subscriptions.length;\n            while (++index < len) {\n                const sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    }\n    add(teardown) {\n        let subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    const tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        let { _parentOrParents } = subscription;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        const subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    }\n    remove(subscription) {\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n}\nSubscription.EMPTY = (function (empty) {\n    empty.closed = true;\n    return empty;\n}(new Subscription()));\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n//# sourceMappingURL=Subscription.js.map"]},"metadata":{},"sourceType":"module"}
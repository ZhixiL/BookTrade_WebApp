{"ast":null,"code":"\"use strict\";\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","map":{"version":3,"sources":["/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/css-loader/dist/runtime/api.js"],"names":["module","exports","cssWithMappingToString","list","toString","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","push"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,sBAAV,EAAkC;AACjD,MAAIC,IAAI,GAAG,EAAX,CADiD,CAClC;;AAEfA,EAAAA,IAAI,CAACC,QAAL,GAAgB,SAASA,QAAT,GAAoB;AAClC,WAAO,KAAKC,GAAL,CAAS,UAAUC,IAAV,EAAgB;AAC9B,UAAIC,OAAO,GAAGL,sBAAsB,CAACI,IAAD,CAApC;;AAEA,UAAIA,IAAI,CAAC,CAAD,CAAR,EAAa;AACX,eAAO,UAAUE,MAAV,CAAiBF,IAAI,CAAC,CAAD,CAArB,EAA0B,IAA1B,EAAgCE,MAAhC,CAAuCD,OAAvC,EAAgD,GAAhD,CAAP;AACD;;AAED,aAAOA,OAAP;AACD,KARM,EAQJE,IARI,CAQC,EARD,CAAP;AASD,GAVD,CAHiD,CAa9C;AACH;;;AAGAN,EAAAA,IAAI,CAACO,CAAL,GAAS,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,MAA/B,EAAuC;AAC9C,QAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAC/B;AACAA,MAAAA,OAAO,GAAG,CAAC,CAAC,IAAD,EAAOA,OAAP,EAAgB,EAAhB,CAAD,CAAV;AACD;;AAED,QAAIG,sBAAsB,GAAG,EAA7B;;AAEA,QAAID,MAAJ,EAAY;AACV,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKK,MAAzB,EAAiCL,CAAC,EAAlC,EAAsC;AACpC;AACA,YAAIM,EAAE,GAAG,KAAKN,CAAL,EAAQ,CAAR,CAAT;;AAEA,YAAIM,EAAE,IAAI,IAAV,EAAgB;AACdF,UAAAA,sBAAsB,CAACE,EAAD,CAAtB,GAA6B,IAA7B;AACD;AACF;AACF;;AAED,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGN,OAAO,CAACI,MAA9B,EAAsCE,EAAE,EAAxC,EAA4C;AAC1C,UAAIX,IAAI,GAAG,GAAGE,MAAH,CAAUG,OAAO,CAACM,EAAD,CAAjB,CAAX;;AAEA,UAAIJ,MAAM,IAAIC,sBAAsB,CAACR,IAAI,CAAC,CAAD,CAAL,CAApC,EAA+C;AAC7C;AACA;AACD;;AAED,UAAIM,UAAJ,EAAgB;AACd,YAAI,CAACN,IAAI,CAAC,CAAD,CAAT,EAAc;AACZA,UAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUM,UAAV;AACD,SAFD,MAEO;AACLN,UAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAGE,MAAH,CAAUI,UAAV,EAAsB,OAAtB,EAA+BJ,MAA/B,CAAsCF,IAAI,CAAC,CAAD,CAA1C,CAAV;AACD;AACF;;AAEDH,MAAAA,IAAI,CAACe,IAAL,CAAUZ,IAAV;AACD;AACF,GArCD;;AAuCA,SAAOH,IAAP;AACD,CAzDD","sourcesContent":["\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      return input.then(function (value) {\n        sub.add(scheduler.schedule(function () {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }));\n      }, function (err) {\n        sub.add(scheduler.schedule(function () {\n          return subscriber.error(err);\n        }));\n      });\n    }));\n    return sub;\n  });\n} //# sourceMappingURL=schedulePromise.js.map","map":{"version":3,"sources":["/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/scheduled/schedulePromise.js"],"names":["Observable","Subscription","schedulePromise","input","scheduler","subscriber","sub","add","schedule","then","value","next","complete","err","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,SAAhC,EAA2C;AAC9C,SAAO,IAAIJ,UAAJ,CAAe,UAAAK,UAAU,EAAI;AAChC,QAAMC,GAAG,GAAG,IAAIL,YAAJ,EAAZ;AACAK,IAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB;AAAA,aAAML,KAAK,CAACM,IAAN,CAAW,UAAAC,KAAK,EAAI;AACjDJ,QAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,YAAM;AAC7BH,UAAAA,UAAU,CAACM,IAAX,CAAgBD,KAAhB;AACAJ,UAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB;AAAA,mBAAMH,UAAU,CAACO,QAAX,EAAN;AAAA,WAAnB,CAAR;AACH,SAHO,CAAR;AAIH,OALgC,EAK9B,UAAAC,GAAG,EAAI;AACNP,QAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB;AAAA,iBAAMH,UAAU,CAACS,KAAX,CAAiBD,GAAjB,CAAN;AAAA,SAAnB,CAAR;AACH,OAPgC,CAAN;AAAA,KAAnB,CAAR;AAQA,WAAOP,GAAP;AACH,GAXM,CAAP;AAYH,C,CACD","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(subscriber => {\n        const sub = new Subscription();\n        sub.add(scheduler.schedule(() => input.then(value => {\n            sub.add(scheduler.schedule(() => {\n                subscriber.next(value);\n                sub.add(scheduler.schedule(() => subscriber.complete()));\n            }));\n        }, err => {\n            sub.add(scheduler.schedule(() => subscriber.error(err)));\n        })));\n        return sub;\n    });\n}\n//# sourceMappingURL=schedulePromise.js.map"]},"metadata":{},"sourceType":"module"}
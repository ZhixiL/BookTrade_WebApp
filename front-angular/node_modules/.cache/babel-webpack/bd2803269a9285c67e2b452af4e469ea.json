{"ast":null,"code":"import _toConsumableArray from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n  if (resultSelector) {\n    return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, _toConsumableArray(args)) : resultSelector(args);\n    }));\n  }\n\n  return new Observable(function (subscriber) {\n    var handler = function handler() {\n      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {\n        e[_key] = arguments[_key];\n      }\n\n      return subscriber.next(e.length === 1 ? e[0] : e);\n    };\n\n    var retValue;\n\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return function () {\n      return removeHandler(handler, retValue);\n    };\n  });\n} //# sourceMappingURL=fromEventPattern.js.map","map":{"version":3,"sources":["/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/observable/fromEventPattern.js"],"names":["Observable","isArray","isFunction","map","fromEventPattern","addHandler","removeHandler","resultSelector","pipe","args","subscriber","handler","e","next","length","retValue","err","error","undefined"],"mappings":";AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAO,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,aAAtC,EAAqDC,cAArD,EAAqE;AACxE,MAAIA,cAAJ,EAAoB;AAChB,WAAOH,gBAAgB,CAACC,UAAD,EAAaC,aAAb,CAAhB,CAA4CE,IAA5C,CAAiDL,GAAG,CAAC,UAAAM,IAAI;AAAA,aAAIR,OAAO,CAACQ,IAAD,CAAP,GAAgBF,cAAc,MAAd,4BAAkBE,IAAlB,EAAhB,GAA0CF,cAAc,CAACE,IAAD,CAA5D;AAAA,KAAL,CAApD,CAAP;AACH;;AACD,SAAO,IAAIT,UAAJ,CAAe,UAAAU,UAAU,EAAI;AAChC,QAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,wCAAIC,CAAJ;AAAIA,QAAAA,CAAJ;AAAA;;AAAA,aAAUF,UAAU,CAACG,IAAX,CAAgBD,CAAC,CAACE,MAAF,KAAa,CAAb,GAAiBF,CAAC,CAAC,CAAD,CAAlB,GAAwBA,CAAxC,CAAV;AAAA,KAAhB;;AACA,QAAIG,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAGV,UAAU,CAACM,OAAD,CAArB;AACH,KAFD,CAGA,OAAOK,GAAP,EAAY;AACRN,MAAAA,UAAU,CAACO,KAAX,CAAiBD,GAAjB;AACA,aAAOE,SAAP;AACH;;AACD,QAAI,CAAChB,UAAU,CAACI,aAAD,CAAf,EAAgC;AAC5B,aAAOY,SAAP;AACH;;AACD,WAAO;AAAA,aAAMZ,aAAa,CAACK,OAAD,EAAUI,QAAV,CAAnB;AAAA,KAAP;AACH,GAdM,CAAP;AAeH,C,CACD","sourcesContent":["import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map"]},"metadata":{},"sourceType":"module"}
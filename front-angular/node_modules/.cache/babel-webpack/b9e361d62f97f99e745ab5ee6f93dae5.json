{"ast":null,"code":"import { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n  return new Observable(function (subscriber) {\n    var resource;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    var result;\n\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    var source = result ? from(result) : EMPTY;\n    var subscription = source.subscribe(subscriber);\n    return function () {\n      subscription.unsubscribe();\n\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n} //# sourceMappingURL=using.js.map","map":{"version":3,"sources":["/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/observable/using.js"],"names":["Observable","from","EMPTY","using","resourceFactory","observableFactory","subscriber","resource","err","error","undefined","result","source","subscription","subscribe","unsubscribe"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAO,SAASC,KAAT,CAAeC,eAAf,EAAgCC,iBAAhC,EAAmD;AACtD,SAAO,IAAIL,UAAJ,CAAe,UAAAM,UAAU,EAAI;AAChC,QAAIC,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAGH,eAAe,EAA1B;AACH,KAFD,CAGA,OAAOI,GAAP,EAAY;AACRF,MAAAA,UAAU,CAACG,KAAX,CAAiBD,GAAjB;AACA,aAAOE,SAAP;AACH;;AACD,QAAIC,MAAJ;;AACA,QAAI;AACAA,MAAAA,MAAM,GAAGN,iBAAiB,CAACE,QAAD,CAA1B;AACH,KAFD,CAGA,OAAOC,GAAP,EAAY;AACRF,MAAAA,UAAU,CAACG,KAAX,CAAiBD,GAAjB;AACA,aAAOE,SAAP;AACH;;AACD,QAAME,MAAM,GAAGD,MAAM,GAAGV,IAAI,CAACU,MAAD,CAAP,GAAkBT,KAAvC;AACA,QAAMW,YAAY,GAAGD,MAAM,CAACE,SAAP,CAAiBR,UAAjB,CAArB;AACA,WAAO,YAAM;AACTO,MAAAA,YAAY,CAACE,WAAb;;AACA,UAAIR,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACQ,WAAT;AACH;AACJ,KALD;AAMH,GAzBM,CAAP;AA0BH,C,CACD","sourcesContent":["import { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(subscriber => {\n        let resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        let result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = result ? from(result) : EMPTY;\n        const subscription = source.subscribe(subscriber);\n        return () => {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map"]},"metadata":{},"sourceType":"module"}
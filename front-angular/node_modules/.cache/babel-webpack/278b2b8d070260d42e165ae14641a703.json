{"ast":null,"code":"import _get from \"/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function retry() {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  return function (source) {\n    return source.lift(new RetryOperator(count, source));\n  };\n}\n\nvar RetryOperator = /*#__PURE__*/function () {\n  function RetryOperator(count, source) {\n    _classCallCheck(this, RetryOperator);\n\n    this.count = count;\n    this.source = source;\n  }\n\n  _createClass(RetryOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n  }]);\n\n  return RetryOperator;\n}();\n\nvar RetrySubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(RetrySubscriber, _Subscriber);\n\n  var _super = _createSuper(RetrySubscriber);\n\n  function RetrySubscriber(destination, count, source) {\n    var _this;\n\n    _classCallCheck(this, RetrySubscriber);\n\n    _this = _super.call(this, destination);\n    _this.count = count;\n    _this.source = source;\n    return _this;\n  }\n\n  _createClass(RetrySubscriber, [{\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        var source = this.source,\n            count = this.count;\n\n        if (count === 0) {\n          return _get(_getPrototypeOf(RetrySubscriber.prototype), \"error\", this).call(this, err);\n        } else if (count > -1) {\n          this.count = count - 1;\n        }\n\n        source.subscribe(this._unsubscribeAndRecycle());\n      }\n    }\n  }]);\n\n  return RetrySubscriber;\n}(Subscriber); //# sourceMappingURL=retry.js.map","map":{"version":3,"sources":["/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/rxjs/_esm2015/internal/operators/retry.js"],"names":["Subscriber","retry","count","source","lift","RetryOperator","subscriber","subscribe","RetrySubscriber","destination","err","isStopped","_unsubscribeAndRecycle"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,KAAT,GAA2B;AAAA,MAAZC,KAAY,uEAAJ,CAAC,CAAG;AAC9B,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,aAAJ,CAAkBH,KAAlB,EAAyBC,MAAzB,CAAZ,CAAZ;AAAA,GAAP;AACH;;IACKE,a;AACF,yBAAYH,KAAZ,EAAmBC,MAAnB,EAA2B;AAAA;;AACvB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;;;WACD,cAAKG,UAAL,EAAiBH,MAAjB,EAAyB;AACrB,aAAOA,MAAM,CAACI,SAAP,CAAiB,IAAIC,eAAJ,CAAoBF,UAApB,EAAgC,KAAKJ,KAArC,EAA4C,KAAKC,MAAjD,CAAjB,CAAP;AACH;;;;;;IAECK,e;;;;;AACF,2BAAYC,WAAZ,EAAyBP,KAAzB,EAAgCC,MAAhC,EAAwC;AAAA;;AAAA;;AACpC,8BAAMM,WAAN;AACA,UAAKP,KAAL,GAAaA,KAAb;AACA,UAAKC,MAAL,GAAcA,MAAd;AAHoC;AAIvC;;;;WACD,eAAMO,GAAN,EAAW;AACP,UAAI,CAAC,KAAKC,SAAV,EAAqB;AAAA,YACTR,MADS,GACS,IADT,CACTA,MADS;AAAA,YACDD,KADC,GACS,IADT,CACDA,KADC;;AAEjB,YAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,4FAAmBQ,GAAnB;AACH,SAFD,MAGK,IAAIR,KAAK,GAAG,CAAC,CAAb,EAAgB;AACjB,eAAKA,KAAL,GAAaA,KAAK,GAAG,CAArB;AACH;;AACDC,QAAAA,MAAM,CAACI,SAAP,CAAiB,KAAKK,sBAAL,EAAjB;AACH;AACJ;;;;EAjByBZ,U,GAmB9B","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n//# sourceMappingURL=retry.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _inherits from \"/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n  var hasSeed = false;\n\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source) {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nvar ScanOperator = /*#__PURE__*/function () {\n  function ScanOperator(accumulator, seed) {\n    var hasSeed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ScanOperator);\n\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.hasSeed = hasSeed;\n  }\n\n  _createClass(ScanOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n  }]);\n\n  return ScanOperator;\n}();\n\nvar ScanSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(ScanSubscriber, _Subscriber);\n\n  var _super = _createSuper(ScanSubscriber);\n\n  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n    var _this;\n\n    _classCallCheck(this, ScanSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.accumulator = accumulator;\n    _this._seed = _seed;\n    _this.hasSeed = hasSeed;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(ScanSubscriber, [{\n    key: \"seed\",\n    get: function get() {\n      return this._seed;\n    },\n    set: function set(value) {\n      this.hasSeed = true;\n      this._seed = value;\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.hasSeed) {\n        this.seed = value;\n        this.destination.next(value);\n      } else {\n        return this._tryNext(value);\n      }\n    }\n  }, {\n    key: \"_tryNext\",\n    value: function _tryNext(value) {\n      var index = this.index++;\n      var result;\n\n      try {\n        result = this.accumulator(this.seed, value, index);\n      } catch (err) {\n        this.destination.error(err);\n      }\n\n      this.seed = result;\n      this.destination.next(result);\n    }\n  }]);\n\n  return ScanSubscriber;\n}(Subscriber); //# sourceMappingURL=scan.js.map","map":{"version":3,"sources":["/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/operators/scan.js"],"names":["Subscriber","scan","accumulator","seed","hasSeed","arguments","length","scanOperatorFunction","source","lift","ScanOperator","subscriber","subscribe","ScanSubscriber","destination","_seed","index","value","next","_tryNext","result","err","error"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,IAAT,CAAcC,WAAd,EAA2BC,IAA3B,EAAiC;AACpC,MAAIC,OAAO,GAAG,KAAd;;AACA,MAAIC,SAAS,CAACC,MAAV,IAAoB,CAAxB,EAA2B;AACvBF,IAAAA,OAAO,GAAG,IAAV;AACH;;AACD,SAAO,SAASG,oBAAT,CAA8BC,MAA9B,EAAsC;AACzC,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,YAAJ,CAAiBR,WAAjB,EAA8BC,IAA9B,EAAoCC,OAApC,CAAZ,CAAP;AACH,GAFD;AAGH;;IACKM,Y;AACF,wBAAYR,WAAZ,EAAyBC,IAAzB,EAAgD;AAAA,QAAjBC,OAAiB,uEAAP,KAAO;;AAAA;;AAC5C,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;;;WACD,cAAKO,UAAL,EAAiBH,MAAjB,EAAyB;AACrB,aAAOA,MAAM,CAACI,SAAP,CAAiB,IAAIC,cAAJ,CAAmBF,UAAnB,EAA+B,KAAKT,WAApC,EAAiD,KAAKC,IAAtD,EAA4D,KAAKC,OAAjE,CAAjB,CAAP;AACH;;;;;;IAECS,c;;;;;AACF,0BAAYC,WAAZ,EAAyBZ,WAAzB,EAAsCa,KAAtC,EAA6CX,OAA7C,EAAsD;AAAA;;AAAA;;AAClD,8BAAMU,WAAN;AACA,UAAKZ,WAAL,GAAmBA,WAAnB;AACA,UAAKa,KAAL,GAAaA,KAAb;AACA,UAAKX,OAAL,GAAeA,OAAf;AACA,UAAKY,KAAL,GAAa,CAAb;AALkD;AAMrD;;;;SACD,eAAW;AACP,aAAO,KAAKD,KAAZ;AACH,K;SACD,aAASE,KAAT,EAAgB;AACZ,WAAKb,OAAL,GAAe,IAAf;AACA,WAAKW,KAAL,GAAaE,KAAb;AACH;;;WACD,eAAMA,KAAN,EAAa;AACT,UAAI,CAAC,KAAKb,OAAV,EAAmB;AACf,aAAKD,IAAL,GAAYc,KAAZ;AACA,aAAKH,WAAL,CAAiBI,IAAjB,CAAsBD,KAAtB;AACH,OAHD,MAIK;AACD,eAAO,KAAKE,QAAL,CAAcF,KAAd,CAAP;AACH;AACJ;;;WACD,kBAASA,KAAT,EAAgB;AACZ,UAAMD,KAAK,GAAG,KAAKA,KAAL,EAAd;AACA,UAAII,MAAJ;;AACA,UAAI;AACAA,QAAAA,MAAM,GAAG,KAAKlB,WAAL,CAAiB,KAAKC,IAAtB,EAA4Bc,KAA5B,EAAmCD,KAAnC,CAAT;AACH,OAFD,CAGA,OAAOK,GAAP,EAAY;AACR,aAAKP,WAAL,CAAiBQ,KAAjB,CAAuBD,GAAvB;AACH;;AACD,WAAKlB,IAAL,GAAYiB,MAAZ;AACA,WAAKN,WAAL,CAAiBI,IAAjB,CAAsBE,MAAtB;AACH;;;;EAnCwBpB,U,GAqC7B","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    let hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nclass ScanOperator {\n    constructor(accumulator, seed, hasSeed = false) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n}\nclass ScanSubscriber extends Subscriber {\n    constructor(destination, accumulator, _seed, hasSeed) {\n        super(destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    get seed() {\n        return this._seed;\n    }\n    set seed(value) {\n        this.hasSeed = true;\n        this._seed = value;\n    }\n    _next(value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    }\n    _tryNext(value) {\n        const index = this.index++;\n        let result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=scan.js.map"]},"metadata":{},"sourceType":"module"}
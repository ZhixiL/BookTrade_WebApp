{"ast":null,"code":"import _toConsumableArray from \"/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        return bindNodeCallback(callbackFunc, scheduler).apply(void 0, arguments).pipe(map(function (args) {\n          return isArray(args) ? resultSelector.apply(void 0, _toConsumableArray(args)) : resultSelector(args);\n        }));\n      };\n    }\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var params = {\n      subject: undefined,\n      args: args,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler,\n      context: this\n    };\n    return new Observable(function (subscriber) {\n      var context = params.context;\n      var subject = params.subject;\n\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject();\n\n          var handler = function handler() {\n            for (var _len2 = arguments.length, innerArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              innerArgs[_key2] = arguments[_key2];\n            }\n\n            var err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [].concat(args, [handler]));\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule(dispatch, 0, {\n          params: params,\n          subscriber: subscriber,\n          context: context\n        });\n      }\n    });\n  };\n}\n\nfunction dispatch(state) {\n  var _this = this;\n\n  var params = state.params,\n      subscriber = state.subscriber,\n      context = state.context;\n  var callbackFunc = params.callbackFunc,\n      args = params.args,\n      scheduler = params.scheduler;\n  var subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject();\n\n    var handler = function handler() {\n      for (var _len3 = arguments.length, innerArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        innerArgs[_key3] = arguments[_key3];\n      }\n\n      var err = innerArgs.shift();\n\n      if (err) {\n        _this.add(scheduler.schedule(dispatchError, 0, {\n          err: err,\n          subject: subject\n        }));\n      } else {\n        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n\n        _this.add(scheduler.schedule(dispatchNext, 0, {\n          value: value,\n          subject: subject\n        }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [].concat(_toConsumableArray(args), [handler]));\n    } catch (err) {\n      this.add(scheduler.schedule(dispatchError, 0, {\n        err: err,\n        subject: subject\n      }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\nfunction dispatchNext(arg) {\n  var value = arg.value,\n      subject = arg.subject;\n  subject.next(value);\n  subject.complete();\n}\n\nfunction dispatchError(arg) {\n  var err = arg.err,\n      subject = arg.subject;\n  subject.error(err);\n} //# sourceMappingURL=bindNodeCallback.js.map","map":{"version":3,"sources":["/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js"],"names":["Observable","AsyncSubject","map","canReportError","isScheduler","isArray","bindNodeCallback","callbackFunc","resultSelector","scheduler","pipe","args","params","subject","undefined","context","subscriber","handler","innerArgs","err","shift","error","next","length","complete","apply","console","warn","subscribe","schedule","dispatch","state","add","dispatchError","value","dispatchNext","arg"],"mappings":"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","sourcesContent":["import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const params = {\n            subject: undefined,\n            args,\n            callbackFunc,\n            scheduler,\n            context: this,\n        };\n        return new Observable(subscriber => {\n            const { context } = params;\n            let { subject } = params;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        const err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params, subscriber, context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const { params, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = params;\n    let subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const err = innerArgs.shift();\n            if (err) {\n                this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n            }\n            else {\n                const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    const { value, subject } = arg;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    const { err, subject } = arg;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map"]},"metadata":{},"sourceType":"module"}
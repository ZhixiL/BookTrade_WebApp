{"ast":null,"code":"import { map } from './map';\nexport function pluck() {\n  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  var length = properties.length;\n\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n\n  return function (source) {\n    return map(plucker(properties, length))(source);\n  };\n}\n\nfunction plucker(props, length) {\n  var mapper = function mapper(x) {\n    var currentProp = x;\n\n    for (var i = 0; i < length; i++) {\n      var p = currentProp != null ? currentProp[props[i]] : undefined;\n\n      if (p !== void 0) {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n\n    return currentProp;\n  };\n\n  return mapper;\n} //# sourceMappingURL=pluck.js.map","map":{"version":3,"sources":["/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/rxjs/_esm2015/internal/operators/pluck.js"],"names":["map","pluck","properties","length","Error","source","plucker","props","mapper","x","currentProp","i","p","undefined"],"mappings":"AAAA,SAASA,GAAT,QAAoB,OAApB;AACA,OAAO,SAASC,KAAT,GAA8B;AAAA,oCAAZC,UAAY;AAAZA,IAAAA,UAAY;AAAA;;AACjC,MAAMC,MAAM,GAAGD,UAAU,CAACC,MAA1B;;AACA,MAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,SAAO,UAACC,MAAD;AAAA,WAAYL,GAAG,CAACM,OAAO,CAACJ,UAAD,EAAaC,MAAb,CAAR,CAAH,CAAiCE,MAAjC,CAAZ;AAAA,GAAP;AACH;;AACD,SAASC,OAAT,CAAiBC,KAAjB,EAAwBJ,MAAxB,EAAgC;AAC5B,MAAMK,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAAO;AAClB,QAAIC,WAAW,GAAGD,CAAlB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAApB,EAA4BQ,CAAC,EAA7B,EAAiC;AAC7B,UAAMC,CAAC,GAAGF,WAAW,IAAI,IAAf,GAAsBA,WAAW,CAACH,KAAK,CAACI,CAAD,CAAN,CAAjC,GAA8CE,SAAxD;;AACA,UAAID,CAAC,KAAK,KAAK,CAAf,EAAkB;AACdF,QAAAA,WAAW,GAAGE,CAAd;AACH,OAFD,MAGK;AACD,eAAOC,SAAP;AACH;AACJ;;AACD,WAAOH,WAAP;AACH,GAZD;;AAaA,SAAOF,MAAP;AACH,C,CACD","sourcesContent":["import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map"]},"metadata":{},"sourceType":"module"}
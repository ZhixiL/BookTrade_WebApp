{"ast":null,"code":"import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval() {\n  var period = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : async;\n\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable(function (subscriber) {\n    subscriber.add(scheduler.schedule(dispatch, period, {\n      subscriber: subscriber,\n      counter: 0,\n      period: period\n    }));\n    return subscriber;\n  });\n}\n\nfunction dispatch(state) {\n  var subscriber = state.subscriber,\n      counter = state.counter,\n      period = state.period;\n  subscriber.next(counter);\n  this.schedule({\n    subscriber: subscriber,\n    counter: counter + 1,\n    period: period\n  }, period);\n} //# sourceMappingURL=interval.js.map","map":{"version":3,"sources":["/Users/zacklin/Desktop/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/observable/interval.js"],"names":["Observable","async","isNumeric","interval","period","scheduler","schedule","subscriber","add","dispatch","counter","state","next"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,SAASC,QAAT,GAAiD;AAAA,MAA/BC,MAA+B,uEAAtB,CAAsB;AAAA,MAAnBC,SAAmB,uEAAPJ,KAAO;;AACpD,MAAI,CAACC,SAAS,CAACE,MAAD,CAAV,IAAsBA,MAAM,GAAG,CAAnC,EAAsC;AAClCA,IAAAA,MAAM,GAAG,CAAT;AACH;;AACD,MAAI,CAACC,SAAD,IAAc,OAAOA,SAAS,CAACC,QAAjB,KAA8B,UAAhD,EAA4D;AACxDD,IAAAA,SAAS,GAAGJ,KAAZ;AACH;;AACD,SAAO,IAAID,UAAJ,CAAe,UAAAO,UAAU,EAAI;AAChCA,IAAAA,UAAU,CAACC,GAAX,CAAeH,SAAS,CAACC,QAAV,CAAmBG,QAAnB,EAA6BL,MAA7B,EAAqC;AAAEG,MAAAA,UAAU,EAAVA,UAAF;AAAcG,MAAAA,OAAO,EAAE,CAAvB;AAA0BN,MAAAA,MAAM,EAANA;AAA1B,KAArC,CAAf;AACA,WAAOG,UAAP;AACH,GAHM,CAAP;AAIH;;AACD,SAASE,QAAT,CAAkBE,KAAlB,EAAyB;AAAA,MACbJ,UADa,GACmBI,KADnB,CACbJ,UADa;AAAA,MACDG,OADC,GACmBC,KADnB,CACDD,OADC;AAAA,MACQN,MADR,GACmBO,KADnB,CACQP,MADR;AAErBG,EAAAA,UAAU,CAACK,IAAX,CAAgBF,OAAhB;AACA,OAAKJ,QAAL,CAAc;AAAEC,IAAAA,UAAU,EAAVA,UAAF;AAAcG,IAAAA,OAAO,EAAEA,OAAO,GAAG,CAAjC;AAAoCN,IAAAA,MAAM,EAANA;AAApC,GAAd,EAA4DA,MAA5D;AACH,C,CACD","sourcesContent":["import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nvar none = {};\nexport function combineLatest() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n\n  var project = null;\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = observables.pop();\n  }\n\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0].slice();\n  }\n\n  return function (source) {\n    return source.lift.call(from([source].concat(_toConsumableArray(observables))), new CombineLatestOperator(project));\n  };\n} //# sourceMappingURL=combineLatest.js.map","map":{"version":3,"sources":["/Users/zacklin/OneDrive - Florida State Students/FSU/2021 Spring/CEN4090L/bookwebapp/front-angular/node_modules/rxjs/_esm2015/internal/operators/combineLatest.js"],"names":["isArray","CombineLatestOperator","from","none","combineLatest","observables","project","length","pop","slice","source","lift","call"],"mappings":";AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,qBAAT,QAAsC,6BAAtC;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,IAAMC,IAAI,GAAG,EAAb;AACA,OAAO,SAASC,aAAT,GAAuC;AAAA,oCAAbC,WAAa;AAAbA,IAAAA,WAAa;AAAA;;AAC1C,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAI,OAAOD,WAAW,CAACA,WAAW,CAACE,MAAZ,GAAqB,CAAtB,CAAlB,KAA+C,UAAnD,EAA+D;AAC3DD,IAAAA,OAAO,GAAGD,WAAW,CAACG,GAAZ,EAAV;AACH;;AACD,MAAIH,WAAW,CAACE,MAAZ,KAAuB,CAAvB,IAA4BP,OAAO,CAACK,WAAW,CAAC,CAAD,CAAZ,CAAvC,EAAyD;AACrDA,IAAAA,WAAW,GAAGA,WAAW,CAAC,CAAD,CAAX,CAAeI,KAAf,EAAd;AACH;;AACD,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiBV,IAAI,EAAEQ,MAAF,4BAAaL,WAAb,GAArB,EAAiD,IAAIJ,qBAAJ,CAA0BK,OAA1B,CAAjD,CAAZ;AAAA,GAAP;AACH,C,CACD","sourcesContent":["import { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nconst none = {};\nexport function combineLatest(...observables) {\n    let project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return (source) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n//# sourceMappingURL=combineLatest.js.map"]},"metadata":{},"sourceType":"module"}
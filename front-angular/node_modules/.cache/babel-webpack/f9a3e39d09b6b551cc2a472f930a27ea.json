{"ast":null,"code":"import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function subscribeToIterable(iterable) {\n  return function (subscriber) {\n    var iterator = iterable[Symbol_iterator]();\n\n    do {\n      var item = void 0;\n\n      try {\n        item = iterator.next();\n      } catch (err) {\n        subscriber.error(err);\n        return subscriber;\n      }\n\n      if (item.done) {\n        subscriber.complete();\n        break;\n      }\n\n      subscriber.next(item.value);\n\n      if (subscriber.closed) {\n        break;\n      }\n    } while (true);\n\n    if (typeof iterator.return === 'function') {\n      subscriber.add(function () {\n        if (iterator.return) {\n          iterator.return();\n        }\n      });\n    }\n\n    return subscriber;\n  };\n}; //# sourceMappingURL=subscribeToIterable.js.map","map":{"version":3,"sources":["/Users/chunli/Desktop/newbooktrade/CEN4090L-Team5/front-angular/node_modules/rxjs/_esm2015/internal/util/subscribeToIterable.js"],"names":["iterator","Symbol_iterator","subscribeToIterable","iterable","subscriber","item","next","err","error","done","complete","value","closed","return","add"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,eAArB,QAA4C,oBAA5C;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD;AAAA,SAAc,UAACC,UAAD,EAAgB;AAC7D,QAAMJ,QAAQ,GAAGG,QAAQ,CAACF,eAAD,CAAR,EAAjB;;AACA,OAAG;AACC,UAAII,IAAI,SAAR;;AACA,UAAI;AACAA,QAAAA,IAAI,GAAGL,QAAQ,CAACM,IAAT,EAAP;AACH,OAFD,CAGA,OAAOC,GAAP,EAAY;AACRH,QAAAA,UAAU,CAACI,KAAX,CAAiBD,GAAjB;AACA,eAAOH,UAAP;AACH;;AACD,UAAIC,IAAI,CAACI,IAAT,EAAe;AACXL,QAAAA,UAAU,CAACM,QAAX;AACA;AACH;;AACDN,MAAAA,UAAU,CAACE,IAAX,CAAgBD,IAAI,CAACM,KAArB;;AACA,UAAIP,UAAU,CAACQ,MAAf,EAAuB;AACnB;AACH;AACJ,KAjBD,QAiBS,IAjBT;;AAkBA,QAAI,OAAOZ,QAAQ,CAACa,MAAhB,KAA2B,UAA/B,EAA2C;AACvCT,MAAAA,UAAU,CAACU,GAAX,CAAe,YAAM;AACjB,YAAId,QAAQ,CAACa,MAAb,EAAqB;AACjBb,UAAAA,QAAQ,CAACa,MAAT;AACH;AACJ,OAJD;AAKH;;AACD,WAAOT,UAAP;AACH,GA5BkC;AAAA,CAA5B,C,CA6BP","sourcesContent":["import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport const subscribeToIterable = (iterable) => (subscriber) => {\n    const iterator = iterable[Symbol_iterator]();\n    do {\n        let item;\n        try {\n            item = iterator.next();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return subscriber;\n        }\n        if (item.done) {\n            subscriber.complete();\n            break;\n        }\n        subscriber.next(item.value);\n        if (subscriber.closed) {\n            break;\n        }\n    } while (true);\n    if (typeof iterator.return === 'function') {\n        subscriber.add(() => {\n            if (iterator.return) {\n                iterator.return();\n            }\n        });\n    }\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToIterable.js.map"]},"metadata":{},"sourceType":"module"}